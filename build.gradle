buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url  = 'https://plugins.gradle.org/m2/' }
        maven { url='https://dist.creeper.host/Sponge/maven' }
        maven {
            url = "https://maven.ellpeck.de"
        }
        maven { url 'https://maven.blamejared.com' }
        maven {
            // location of the maven that hosts JEI files
            name = "Progwml6 maven"
            url = "https://dvs1.progwml6.com/files/maven/"
        }
        maven {
            // location of a maven mirror for JEI files, as a fallback
            name = "ModMaven"
            url = "https://modmaven.k-4u.nl"
        }


        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath "com.wynprice.cursemaven:CurseMaven:2.1.5"
        //classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: "com.wynprice.cursemaven"
//apply plugin: 'org.spongepowered.mixin'
version = '1.16.5-1.1'
group = 'com.minttea.tomeofblood' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'tomeofblood'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: '20201028-1.16.3'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.disableRefMap', 'true'
            mods {
                tomeoblood {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                tomeofblood {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'tomeofblood', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                tomeofblood {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url = "https://maven.blamejared.com"
    }
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.16.5-36.1.0'

    // You may put jars on which you depend on in ./libs or you may define them like so..
    // compile "some.group:artifact:version:classifier"
    // compile "some.group:artifact:version"

    // Real examples
    // compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    // compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // The 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    // provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // These dependencies get remapped to your current MCP mappings
    // deobf 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // For more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

    compileOnly fg.deobf("curse.maven:geckolib:3120121")
    runtimeOnly fg.deobf("curse.maven:geckolib:3120121")
    compileOnly fg.deobf("curse.maven:curios:3122651")
    runtimeOnly fg.deobf("curse.maven:curios:3122651")
    compileOnly fg.deobf("curse.maven:patchouli:3126931")
    runtimeOnly fg.deobf("curse.maven:patchouli:3126931")
    compileOnly fg.deobf("curse.maven:ars-noveau:3275318")
    runtimeOnly fg.deobf("curse.maven:ars-noveau:3275318")
    compileOnly fg.deobf("curse.maven:blood-magic:3149693")
    runtimeOnly fg.deobf("curse.maven:blood-magic:3149693")
    compileOnly fg.deobf("curse.maven:occultism:3238238")
    runtimeOnly fg.deobf("curse.maven:occultism:3238238")
    compileOnly fg.deobf("curse.maven:eidolon:3157832")
    runtimeOnly fg.deobf("curse.maven:eidolon:3157832")
    compileOnly fg.deobf("curse.maven:natures-aura:3255666")
    runtimeOnly fg.deobf("curse.maven:natures-aura:3255666")
    compileOnly fg.deobf("curse.maven:botania:3233810")
    runtimeOnly fg.deobf("curse.maven:botania:3233810")
    compileOnly fg.deobf("curse.maven:jei:3280391")
    runtimeOnly fg.deobf("curse.maven:jei:3280391")

    compileOnly fg.deobf('vazkii.patchouli:Patchouli:1.16.4-50:api')
    runtimeOnly fg.deobf('vazkii.patchouli:Patchouli:1.16.4-50')

}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "tomeofblood",
            "Specification-Vendor": "examplemodsareus",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"examplemodsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}